---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import GoogleTag from '../components/GoogleTag.astro'

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<GoogleTag />
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: var(--body-text);
				transition: color 0.3s ease;
			}
			.comments {
				margin-top: 3em;
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: var(--text-muted);
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<Header />
			<main>
			<article>
				<div class="hero-image">
					{heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
					<section class="comments">
						<script is:inline src="https://giscus.app/client.js"
							data-repo="BurningZilch/TheWorldofash"
							data-repo-id="R_kgDOPwB-SA"
							data-category="Blog comments"
							data-category-id="DIC_kwDOPwB-SM4CwRar"
							data-mapping="pathname"
							data-strict="0"
							data-reactions-enabled="1"
							data-emit-metadata="0"
							data-input-position="bottom"
							data-theme="preferred_color_scheme"
							data-lang="en"
							crossorigin="anonymous"
							async>
						</script>
						<script is:inline>
							const GISCUS_ORIGIN = 'https://giscus.app';
							const MAX_ATTEMPTS = 60;
							let attempts = 0;

							const getSiteTheme = () =>
								document.documentElement.getAttribute('data-theme') === 'dark' ? 'dark' : 'light';

							const updateGiscusTheme = () => {
								const iframe = document.querySelector('iframe.giscus-frame');
								if (!iframe) return false;

								iframe.contentWindow?.postMessage(
									{
										giscus: {
											setConfig: {
												theme: getSiteTheme(),
											},
										},
									},
									GISCUS_ORIGIN
								);

								return true;
							};

							const waitForGiscus = () => {
								if (updateGiscusTheme()) return;
								if (attempts > MAX_ATTEMPTS) return;
								attempts += 1;
								requestAnimationFrame(waitForGiscus);
							};

							const observer = new MutationObserver((mutations) => {
								for (const mutation of mutations) {
									if (mutation.attributeName === 'data-theme') {
										updateGiscusTheme();
										break;
									}
								}
							});

							if (typeof document !== 'undefined') {
								observer.observe(document.documentElement, { attributes: true });
								waitForGiscus();

								window.addEventListener('astro:beforeunload', () => observer.disconnect());
							}
						</script>
					</section>
					</div>
				</article>
		</main>
		<Footer />
	</body>
</html>
